substitutions:
  device_name: daalderop-1.2.1
  friendly_name: Daalderop v1.2.1
  time_timezone: "Europe/Amsterdam"

esphome:
  name: ${device_name}
  friendly_name: ${friendly_name}

esp32:
  board: esp32dev
  framework:
    type: arduino

external_components:
  - source:
    #   type: git
    #   url: https://github.com/pdjong/daalderop-esphome
    #   ref: main
    # refresh: 0s
      type: local
      path: components
    
# Enable logging
logger:
  # baud_rate: 115200
  level: INFO 
  logs:
    sensor: INFO
    MbusController: INFO
# Enable Home Assistant API
api:
#   encryption:
#     key: "PsKaCvrdD8AjEdWsv7b32V2KGBf7kicJAqhE+/zU1H8="
ota:
  password: "e5264b2500ef5b812b82d4342c5a60f6"
wifi:
# Next two lines for building locally with ESPHome
  ssid: "?"
  password: "?"
# Next two lines for building on Home Assistant OS, ESPHome
#  ssid: !secret wifi_ssid
#  password: !secret wifi_password
  # Enable fallback hotspot (captive portal) in case wifi connection fails
  ap:
    ssid: "Daalderop-v-1-2"
    password: "MHcfSqvZc6fe"

# Status LED of ESP
status_led:
  pin: 
    number: 33

uart:
  baud_rate: 19200
  rx_pin: 32
  parity: ODD

sensor:
  - platform: daalderop
    cooling_heating_temperature:
      name: daalderop_cooling_heating_temperature
    sanitary_hot_water_temperature:
      name: daalderop_sanitary_hot_water_temperature
    outside_temperature:
      name: daalderop_outside_temperature
    inside_temperature:
      name: daalderop_inside_temperature
    heat_exchanger_water_inlet_temperature:
      name: daalderop_heat_exchanger_water_inlet_temperature
    heat_exchanger_water_outlet_temperature:
      name: daalderop_heat_exchanger_water_outlet_temperature
    compressor_working_speed_actual:
      name: daalderop_compressor_working_speed_actual
    compressor_working_speed_setpoint:
      name: daalderop_compressor_working_speed_setpoint
    outdoor_fan_setpoint:
      name: daalderop_outdoor_fan_setpoint
    outdoor_fan_1_actual:
      name: daalderop_outdoor_fan_1_actual
    indoor_coil_temperature:
      name: daalderop_indoor_coil_temperature
    low_pressure:
      name: daalderop_low_pressure
    high_pressure:
      name: daalderop_high_pressure
    suction_temperature:
      name: daalderop_suction_temperature
    discharge_temperature:
      name: daalderop_discharge_temperature
    outdoor_coil_temperature:
      name: daalderop_outdoor_coil_temperature
    internal_pump_active:
      name: daalderop_internal_pump_active
    heating_switch:
      name: daalderop_heating_switch
    three_way_valve:
      id: daalderop_three_way_valve   
      name: daalderop_three_way_valve      
      on_state:
        then:
          - text_sensor.template.publish:
              id: three_way_valve_text
              state: !lambda |
                if (x) 
                  return "Verwarming";
                else
                  return "Tapwater";
    
    outdoor_voltage:
      name: daalderop_outdoor_voltage
    outdoor_current:
      name: daalderop_outdoor_current
  
    # decode1:
    #   name: daalderop_decode1
    # decode2:
    #   name: daalderop_decode2
    # decode3:
    #   name: daalderop_decode3
    # decode4:
    #   name: daalderop_decode4
    # decode5:
    #   name: daalderop_decode5
    # decode6:
    #   name: daalderop_decode6
    # decode7:
    #   name: daalderop_decode7
    # decode8:
    #   name: daalderop_decode8
    # decode9:
    #   name: daalderop_decode9
    # decode10:
    #   name: daalderop_decode10
    decode20:
      name: daalderop_decode20   
      id: decode20
    # decode21:
    #   name: daalderop_decode21  
    # decode22:
    #   name: daalderop_decode22   
    # decode23:
    #   name: daalderop_decode23   
    decode24:
      name: daalderop_decode24 
      id: decode24
    decode25:
      name: daalderop_decode25   
      id: decode25
    # decode26:
    #   name: daalderop_decode26   
    # decode27:
    #   name: daalderop_decode27   
    # decode28:
    #   name: daalderop_decode28   
    # decode29:
    #   name: daalderop_decode29   
    # decode30:
    #   name: daalderop_decode30     
    # decode31:
    #   name: daalderop_decode31    
    # decode32:
    #   name: daalderop_decode32    
    # decode33:
    #   name: daalderop_decode33    
    # decode34:
    #   name: daalderop_decode34    
    # decode35:
    #   name: daalderop_decode35
    # decode120:
    #   name: daalderop_decode120      
    # decode121:
    #   name: daalderop_decode121  
    # decode122:
    #   name: daalderop_decode122   
    # decode123:
    #   name: daalderop_decode123   
    # decode124:
    #   name: daalderop_decode124   
    # decode125:
    #   name: daalderop_decode125   
    # decode126:
    #   name: daalderop_decode126   
    # decode127:
    #   name: daalderop_decode127   
    # decode128:
    #   name: daalderop_decode128   
    # decode129:
    #   name: daalderop_decode129   
    # decode130:
    #   name: daalderop_decode130     
    # decode131:
    #   name: daalderop_decode131    
    # decode132:
    #   name: daalderop_decode132    
    # decode133:
    #   name: daalderop_decode133    
    # decode134:
    #   name: daalderop_decode134    
    # decode135:
    #   name: daalderop_decode135           
      
    # decode201:
    #   name: daalderop_decode201  
    # decode202:
    #   name: daalderop_decode202   
    # decode203:
    #   name: daalderop_decode203   
    # decode204:
    #   name: daalderop_decode204   
    # decode205:
    #   name: daalderop_decode205   
    # decode206:
    #   name: daalderop_decode206   
    # decode207:
    #   name: daalderop_decode207   
    # decode208:
    #   name: daalderop_decode208   
    # decode209:
    #   name: daalderop_decode209   
    decode210:
      name: daalderop_decode210     
    # decode211:
    #   name: daalderop_decode211    
    # decode212:
    #   name: daalderop_decode212    
    # decode213:
    #   name: daalderop_decode213    
    # decode214:
    #   name: daalderop_decode214    
    # decode215:
    #   name: daalderop_decode215  
    # decode216:
    #   name: daalderop_decode216   
    # decode217:
    #   name: daalderop_decode217   
    # decode218:
    #   name: daalderop_decode218   
    # decode219:
    #   name: daalderop_decode219   

    # decode301:
    #   name: daalderop_decode301  
    # decode302:
    #   name: daalderop_decode302   
    # decode303:
    #   name: daalderop_decode303   
    # decode304:
    #   name: daalderop_decode304   
    # decode305:
    #   name: daalderop_decode305   
    # decode306:
    #   name: daalderop_decode306   
    # decode307:
    #   name: daalderop_decode307   
    # decode308:
    #   name: daalderop_decode308   
    # decode309:
    #   name: daalderop_decode309   
    # decode310:
    #   name: daalderop_decode310     
    # decode311:
    #   name: daalderop_decode311    
    # decode312:
    #   name: daalderop_decode312    
    # decode313:
    #   name: daalderop_decode313    
    # decode314:
    #   name: daalderop_decode314    
    # decode315:
    #   name: daalderop_decode315  
    # decode316:
    #   name: daalderop_decode316   
    # decode317:
    #   name: daalderop_decode317   
    # decode318:
    #   name: daalderop_decode318   
    # decode319:
    #   name: daalderop_decode319   
    # decode320:
    #   name: daalderop_decode320   

  - platform: uptime
    id: sensor_uptime
  - platform: template
    id: sensor_uptime_timestamp
    name: "Uptime"
    device_class: "timestamp"
    accuracy_decimals: 0
    update_interval: never
    lambda: |-
      static float timestamp = (
        id(time_homeassistant).utcnow().timestamp - id(sensor_uptime).state
      );
      return timestamp;
  - platform: wifi_signal # Reports the WiFi signal strength/RSSI in dB
    name: "Daalderop WiFi Signal dB"
    id: wifi_signal_db
    update_interval: 20s
  - platform: copy # Reports the WiFi signal strength in %
    source_id: wifi_signal_db
    name: "Daalderop WiFi Signal Percent"
    filters:
      - lambda: return min(max(2 * (x + 100.0), 0.0), 100.0);
    unit_of_measurement: " %"

binary_sensor:
  - platform: template
    name: daalderop_defrost
    lambda: |-
      return (id(decode20).state == 68 && (id(decode24).state == 1 || id(decode25).state == 2048)) || (id(decode20).state == 4);
              

time:
  - platform: homeassistant
    id: time_homeassistant
    timezone: "Europe/Amsterdam"
    on_time_sync:
      - component.update: sensor_uptime_timestamp      

text_sensor:
  - platform: template
    id: three_way_valve_text
    name: daalderop_three_way_valve_text
